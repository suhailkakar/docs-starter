openapi: 3.0.1
info:
  title: TON Adapter API
  description: TON Adapter API for transaction tracking and simulation on TAC
servers:
  - url: https://data.spb.tac.build/
  - url: https://data.tac.build/
paths:
  /status:
    post:
      tags:
        - Status
      summary: Get status
      description: Get the status of an operation by its Operation ID
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api_types.OperationIdsParams"
        required: true
      responses:
        "200":
          description: Status of the operations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.GetStatusesResponse"
        "400":
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "404":
          description: Operation ID not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
      x-codegen-request-body-name: body

  /operation-type:
    get:
      tags:
        - Status
      summary: Get operation type
      description: Get type of transaction
      parameters:
        - name: operationId
          in: query
          description: Operation ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Type of the operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.GetOperationTypeResponse"
        "400":
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "404":
          description: Operation ID not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"

  /operation-ids:
    get:
      tags:
        - Operations
      summary: Get Operation IDs using filters
      description: Returns operation IDs that satisfy certain filters
      parameters:
        - name: from
          in: query
          description: Lower time bound of operation (Unix timestamp)
          required: true
          schema:
            type: number
        - name: till
          in: query
          description: Greater time bound of operation (Unix timestamp)
          required: true
          schema:
            type: number
        - name: limit
          in: query
          description: The maximum number of items to return. Default is 100
          schema:
            type: number
        - name: offset
          in: query
          description: The number of items to skip before starting to collect the result set. Default is 0.
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.ArrayResponse-api_types_OperationIdWithTimestamp"
        "400":
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"

  /operation-ids-by-shards-keys:
    post:
      tags:
        - Operations
      summary: Get Operation IDs by shardsKeys
      description: Returns operation IDs that satisfy certain filters
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api_types.ShardsKeysParams"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.OperationIdsByShardsKeysResponse"
        "400":
          description: Invalid body parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "404":
          description: Data not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
      x-codegen-request-body-name: body

  /stage-profiling:
    post:
      tags:
        - Time profiling
      summary: Get stage profiling
      description: Retrieves time information for every stage of transaction based on operation ID
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api_types.OperationIdsParams"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.StageProfilingResponse"
        "400":
          description: Invalid body parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "404":
          description: Data not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
      x-codegen-request-body-name: body

  /tac/observer/is-message-collected:
    get:
      tags:
        - Observer
      summary: Check if merkle message is collected
      description: Check if the TAC MerkleMsg is collected.
      parameters:
        - name: operationId
          in: query
          description: Operation ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Message is collected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.GetStatusResponse"
        "400":
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.StringResponse"
        "404":
          description: Operation ID not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"

  /tac/observer/is-message-executed:
    get:
      tags:
        - Observer
      summary: Check if Merkle Message is Executed
      description: Check if the Merkle message is executed in the TAC chain.
      parameters:
        - name: operationId
          in: query
          description: Operation ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Message is executed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.GetStatusResponse"
        "400":
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "404":
          description: Operation ID not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"

  /tac/observer/is-message-included-in-consensus:
    get:
      tags:
        - Observer
      summary: Check if Merkle Root is Set
      description: Check if the Merkle root is set in the TAC chain.
      parameters:
        - name: operationId
          in: query
          description: Operation ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Merkle root is set
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.GetStatusResponse"
        "400":
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "404":
          description: Operation ID not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"

  /tac/operation-id:
    get:
      tags:
        - Operations
      summary: Get Operation ID
      description: Returns a unique operationId to track the entire path of a transaction. All parameters are fields of the transactionLinker structure in the SDK, which you set when sending a transaction.
      parameters:
        - name: transactionHash
          in: query
          description: TAC transaction hash
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.TACOperationIdResponse"
        "400":
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"

  /tac/simulator/simulate-message:
    post:
      tags:
        - Simulator
      summary: Simulate TAC message
      description: Simulates execution of an TAC call from TON
      requestBody:
        description: Simulation parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/api_types.SimulateMessageTACParams"
        required: true
      responses:
        "200":
          description: TAC simulation response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.TACSimulationResponse"
        "400":
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api_types.Error"
      x-codegen-request-body-name: request

components:
  schemas:
    api_types.ArrayResponse-api_types_OperationIdWithTimestamp:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: "#/components/schemas/api_types.OperationIdWithTimestamp"

    api_types.BlockchainType:
      type: string
      enum:
        - TAC
        - TON
      x-enum-varnames:
        - TAC
        - TON

    api_types.EVMTokenAmountResult:
      type: object
      properties:
        amount:
          type: string
        tokenAddress:
          type: string

    api_types.Error:
      type: object
      properties:
        error:
          type: string

    api_types.ExecutionStages:
      type: object
      properties:
        collectedInTAC:
          $ref: "#/components/schemas/api_types.ProfilingStageData"
        collectedInTON:
          $ref: "#/components/schemas/api_types.ProfilingStageData"
        executedInTAC:
          $ref: "#/components/schemas/api_types.ProfilingStageData"
        executedInTON:
          $ref: "#/components/schemas/api_types.ProfilingStageData"
        includedInTACConsensus:
          $ref: "#/components/schemas/api_types.ProfilingStageData"
        includedInTONConsensus:
          $ref: "#/components/schemas/api_types.ProfilingStageData"
        operationType:
          $ref: "#/components/schemas/api_types.OperationType"

    api_types.FeeParamsResult:
      type: object
      properties:
        currentBaseFee:
          type: string
        isEip1559:
          type: boolean
        suggestedGasPrice:
          type: string
        suggestedGasTip:
          type: string

    api_types.GetOperationTypeResponse:
      type: object
      properties:
        response:
          $ref: "#/components/schemas/api_types.OperationType"

    api_types.GetStatusResponse:
      type: object
      properties:
        response:
          $ref: "#/components/schemas/api_types.StatusResult"

    api_types.GetStatusesResponse:
      type: object
      properties:
        response:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/api_types.StatusResult"

    api_types.GetTONOperationIdParams:
      required:
        - caller
        - shardsKey
      type: object
      properties:
        caller:
          type: string
        shardCount:
          type: integer
        shardsKey:
          type: string
        timestamp:
          type: integer

    api_types.IntResponse:
      type: object
      properties:
        response:
          type: integer

    api_types.NoteInfo:
      type: object
      properties:
        content:
          type: string
        errorName:
          type: string
        internalBytesError:
          type: string
        internalMsg:
          type: string

    api_types.OperationIdWithLogIndex:
      type: object
      properties:
        logIndex:
          type: integer
        operationId:
          type: string

    api_types.OperationIdWithTimestamp:
      type: object
      properties:
        operationId:
          type: string
        timestamp:
          type: integer

    api_types.OperationIdsByShardsKeysResponse:
      type: object
      properties:
        response:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/api_types.OperationIdsByShardsKeysResult"

    api_types.OperationIdsByShardsKeysResult:
      type: object
      properties:
        operationIds:
          type: array
          items:
            type: string

    api_types.OperationIdsParams:
      required:
        - operationIds
      type: object
      properties:
        operationIds:
          type: array
          items:
            type: string

    api_types.OperationType:
      type: string
      enum:
        - PENDING
        - TON-TAC-TON
        - ROLLBACK
        - TON-TAC
        - TAC-TON
        - UNKNOWN
      x-enum-varnames:
        - PENDING
        - TON_TAC_TON
        - ROLLBACK
        - TON_TAC
        - TAC_TON
        - UNKNOWN

    api_types.OutMessageResult:
      type: object
      properties:
        callerAddress:
          type: string
        operationId:
          type: string
        payload:
          type: string
        shardsKey:
          type: integer
        targetAddress:
          type: string
        tokensBurned:
          type: array
          items:
            $ref: "#/components/schemas/api_types.EVMTokenAmountResult"
        tokensLocked:
          type: array
          items:
            $ref: "#/components/schemas/api_types.EVMTokenAmountResult"

    api_types.ProfilingStageData:
      type: object
      properties:
        exists:
          type: boolean
        stageData:
          $ref: "#/components/schemas/api_types.StageData"

    api_types.ShardsKeysParams:
      required:
        - caller
        - shardsKeys
      type: object
      properties:
        caller:
          type: string
        shardsKeys:
          type: array
          items:
            type: string

    api_types.SimulateMessageTACParams:
      required:
        - shardsKey
        - tacCallParams
        - tonAssets
        - tonCaller
      type: object
      properties:
        executorAddress:
          type: string
        extraData:
          type: string
        feeAssetAddress:
          type: string
        shardsKey:
          type: string
        tacCallParams:
          $ref: "#/components/schemas/api_types.TACCallParams"
        tonAssets:
          type: array
          items:
            $ref: "#/components/schemas/api_types.TVMAssetAmount"
        tonCaller:
          type: string

    api_types.Stage:
      type: string
      enum:
        - start
        - collectedInTAC
        - includedInTACConsensus
        - executedInTAC
        - collectedInTON
        - includedInTONConsensus
        - executedInTON
      x-enum-varnames:
        - START
        - COLLECTED_IN_TAC
        - INCLUDED_IN_TAC_CONSENSUS
        - EXECUTED_IN_TAC
        - COLLECTED_IN_TON
        - INCLUDED_IN_TON_CONSENSUS
        - EXECUTED_IN_TON

    api_types.StageData:
      type: object
      properties:
        note:
          $ref: "#/components/schemas/api_types.NoteInfo"
        success:
          type: boolean
        timestamp:
          type: integer
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/api_types.TransactionData"

    api_types.StageProfilingResponse:
      type: object
      properties:
        response:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/api_types.ExecutionStages"

    api_types.StatusResult:
      type: object
      properties:
        note:
          $ref: "#/components/schemas/api_types.NoteInfo"
        stage:
          $ref: "#/components/schemas/api_types.Stage"
        success:
          type: boolean
        timestamp:
          type: integer
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/api_types.TransactionData"

    api_types.StringResponse:
      type: object
      properties:
        response:
          type: string

    api_types.TACCallParams:
      required:
        - target
      type: object
      properties:
        arguments:
          type: string
        methodName:
          type: string
        target:
          type: string

    api_types.TACOperationIdResponse:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: "#/components/schemas/api_types.OperationIdWithLogIndex"

    api_types.TACSimulationDebugInfoResult:
      type: object
      properties:
        blockNumber:
          type: integer
        callData:
          type: string
        from:
          type: string
        to:
          type: string

    api_types.TACSimulationResponse:
      type: object
      properties:
        response:
          $ref: "#/components/schemas/api_types.TACSimulationResult"

    api_types.TACSimulationResult:
      type: object
      properties:
        debugInfo:
          $ref: "#/components/schemas/api_types.TACSimulationDebugInfoResult"
        estimatedGas:
          type: integer
        estimatedJettonFeeAmount:
          type: string
        feeParams:
          $ref: "#/components/schemas/api_types.FeeParamsResult"
        message:
          type: string
        outMessages:
          type: array
          items:
            $ref: "#/components/schemas/api_types.OutMessageResult"
        simulationError:
          type: string
        simulationStatus:
          type: boolean

    api_types.TVMAssetAmount:
      required:
        - amount
      type: object
      properties:
        amount:
          type: string
        tokenAddress:
          type: string

    api_types.TransactionData:
      type: object
      properties:
        blockchainType:
          $ref: "#/components/schemas/api_types.BlockchainType"
        hash:
          type: string

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

x-original-swagger-version: "2.0"
